{
  "storage": [
    {
      "astId": 138,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_initialized",
      "offset": 0,
      "slot": "0",
      "type": "t_uint8"
    },
    {
      "astId": 141,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_initializing",
      "offset": 1,
      "slot": "0",
      "type": "t_bool"
    },
    {
      "astId": 1540,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "__gap",
      "offset": 0,
      "slot": "1",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 519,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_balances",
      "offset": 0,
      "slot": "51",
      "type": "t_mapping(t_address,t_uint256)"
    },
    {
      "astId": 525,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_allowances",
      "offset": 0,
      "slot": "52",
      "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
    },
    {
      "astId": 527,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_totalSupply",
      "offset": 0,
      "slot": "53",
      "type": "t_uint256"
    },
    {
      "astId": 529,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_name",
      "offset": 0,
      "slot": "54",
      "type": "t_string_storage"
    },
    {
      "astId": 531,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_symbol",
      "offset": 0,
      "slot": "55",
      "type": "t_string_storage"
    },
    {
      "astId": 1111,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "__gap",
      "offset": 0,
      "slot": "56",
      "type": "t_array(t_uint256)45_storage"
    },
    {
      "astId": 10,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "_owner",
      "offset": 0,
      "slot": "101",
      "type": "t_address"
    },
    {
      "astId": 130,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "__gap",
      "offset": 0,
      "slot": "102",
      "type": "t_array(t_uint256)49_storage"
    },
    {
      "astId": 5893,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "vestingContract",
      "offset": 0,
      "slot": "151",
      "type": "t_address"
    },
    {
      "astId": 5897,
      "contract": "contracts/ArmadaToken.sol:ArmadaToken",
      "label": "whitelistedSender",
      "offset": 0,
      "slot": "152",
      "type": "t_mapping(t_address,t_bool)"
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_uint256)45_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[45]",
      "numberOfBytes": "1440"
    },
    "t_array(t_uint256)49_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[49]",
      "numberOfBytes": "1568"
    },
    "t_array(t_uint256)50_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[50]",
      "numberOfBytes": "1600"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_mapping(t_address,t_bool)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => bool)",
      "numberOfBytes": "32",
      "value": "t_bool"
    },
    "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => mapping(address => uint256))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_address,t_uint256)"
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_string_storage": {
      "encoding": "bytes",
      "label": "string",
      "numberOfBytes": "32"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    },
    "t_uint8": {
      "encoding": "inplace",
      "label": "uint8",
      "numberOfBytes": "1"
    }
  }
}
